syntax = "proto3";

package topics.protocols;

message ErrorInfo {
  string code = 1;
  string message = 2;
}

message EventPayload {
  bytes data = 1;
  map<string, string> meta = 2;
}

message PersistedEvent {
  string messageId = 1;
  int64 sequence = 2;
  int64 timestamp = 3;
  EventPayload payload = 4;
}

message AppendMessageRequest {
  string messageId = 1;
  EventPayload payload = 2;
}

message PublishProtoMessage {
  bytes data = 1;
  map<string, string> meta = 2;
  string messageId = 3;
}

message PublishedProtoMessage {
  bool isError = 1;
  string messageId = 2;
  int64 sequence = 3;
  int64 timestamp = 4;
  string errorCode = 5;
  string errorMessage = 6;
}

message FetchProtoMessages {
  int32 maxCount = 1;
  int32 maxBytes = 2;
  int32 maxTimeMs = 3;
  int64 fromSequence = 4;
  int64 fromTimestamp = 5;
}

message CreatePropertyRequest {
  string propertyName = 1;
}

message CreatePropertyResponse {
  string propertyName = 1;
  ErrorInfo error = 2;  
}

service TopicService {
  rpc CreateProperty(CreatePropertyRequest) returns (CreatePropertyResponse);
}
